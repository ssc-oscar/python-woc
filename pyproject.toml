[tool.poetry]
name = "python-woc"
version = "0.2.4"
description = "Python interface for World of Code"
authors = ["Runzhi He <rzhe@pku.edu.cn>", "Marat <marat@cmu.edu>"]
license = "GPL-3.0"
readme = "README.md"
packages = [
    { include = "woc" }
]
include = [
    { path = "woc/**/*.so", format = "wheel" },
    { path = "lib/*", format = "sdist" }
]

[tool.poetry.build]
script = "setup.py"
generate-setup-file = false

[tool.poetry.dependencies]
python = "^3.8"
python-lzf = "^0.2.4"
chardet = "^5.2.0"
tqdm = "^4.65.0"
rapidgzip = "^0.14.3"

[tool.poetry.group.build.dependencies]
cython = "^0.29.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
coverage = {extras = ["toml"], version = "^7.5.3"}
# bandit = "^1.7.8"
# docformatter = "^1.7.5"
ruff = "^0.8.4"  # <- ruff is powerful enough to be the only linter
# sphinx = "^7.1.2"
# sphinx-rtd-theme = "^1.0.0"
# sphinx-autobuild = "^2021.3.14"
# sphinx-pyproject = "^0.3.0"
# sphinx-autodoc-typehints = "^1.25.3"
pdoc = "^14.5.0" # <- drop sphinx, too many deps and rst is not fun
pre-commit = "^3.5"
mypy = "^1.5.0"

[build-system]
requires = ["poetry-core", "Cython>=0.29.0,<1.0.0", "setuptools>=42"]
build-backend = "poetry.core.masonry.api"

### Test and coverage ###

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.coverage.report]
show_missing = true
omit = [ "tests/*" ]

[tool.coverage.run]
plugins = [ "Cython.Coverage" ]

### Documentation ###

# [tool.sphinx-autobuild]
# watch = ["woc", "docs"]


### Formatting and linting ###

# [tool.docformatter]
# recursive = true
# wrap-summaries = 88
# wrap-descriptions = 88
# style = 'sphinx'
# blank = true

[tool.ruff]
target-version = "py38"
line-length = 90
extend-exclude = [
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
# rules ref: https://docs.astral.sh/ruff
extend-select = [
    "C4",
    "D201",
    "D204",
    "D205",
    "D206",
    "D210",
    "D211",
    "D213",
    "D300",
    "D419",
    "E",
    "F",
    "G010",
    "I001",
    "INP001",
    "N805",
    "PERF101",
    "PERF102",
    "PERF401",
    "PERF402",
    "PGH004",
    "PGH005",
    "PIE794",
    "PIE796",
    "PIE807",
    "PIE810",
    "RUF015",
    "RUF100",
]
# disable line length check, as ruff format already handles that
ignore = ["E203", "E501", "E741"]

[tool.ruff.lint.per-file-ignores]
# loose checks for test files
"tests/**/*.py" = [
    "S101",
    "ARG",
    "FBT",
    "PLR2004",
    "S311",
    "D",
    "F405",
    "F403",
    "F841"
]
